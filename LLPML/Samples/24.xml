<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.9.20070930">

<!-- IEEE 754 single precision floating point -->

<include src="finish.xml" />

<call name="printf">"-0.1 => "</call>
<call name="Float">-1, -1</call>

<call name="printf">"3.14159265 => "</call>
<call name="Float">314159265, -8</call>

<!-- -->

<int-declare name="INT_MAX">0x7fffffff</int-declare>
<int-declare name="EXP_DIGIT">8</int-declare>
<int-declare name="EXP_MAX">0xff</int-declare>
<int-declare name="SIGN_DIGIT">23</int-declare>
<int-declare name="SIGN_MAX">0x7fffff</int-declare>

<function name="Float">
	<arg name="s" />
	<arg name="e10" />
	<var-declare name="sign">0</var-declare>
	<var-declare name="e2">0</var-declare>
	<var-declare name="ss" />
	<if>
		<cond>s == 0</cond>
		<block>
			<let>e10, 0</let>
		</block>
	</if>
	<if>
		<cond>s lt 0</cond>
		<block>
			<let>sign, 1</let>
			<let>s, -s</let>
		</block>
	</if>
	<while>
		<cond>s % 10 == 0</cond>
		<block>
			<inc>e10</inc>
			<var-div>s, 10</var-div>
		</block>
	</while>
	<while>
		<cond>e10 != 0</cond>
		<block>
			<if>
				<cond>e10 lt 0</cond>
				<block>
					<dec>e2</dec>
					<var-mul>s, 2</var-mul>
					<let>ss, s % 10</let>
					<if>
						<cond>ss == 0 orelse s gt INT_MAX / 2</cond>
						<block>
							<inc>e10</inc>
							<var-div>s, 10</var-div>
							<if>
								<cond>ss ge 5</cond>
								<block>
									<inc>s</inc>
								</block>
							</if>
						</block>
					</if>
				</block>
				<cond>e10 gt 0</cond>
				<block>
					<if>
						<cond>s and 1 == 1 andalso s le INT_MAX / 10</cond>
						<block>
							<dec>e10</dec>
							<var-mul>s, 10</var-mul>
						</block>
					</if>
					<inc>e2</inc>
					<let>s, s / 2 + (s and 1)</let>
				</block>
			</if>
		</block>
	</while>
	<while>
		<cond>s gt 0 andalso s le SIGN_MAX</cond>
		<block>
			<dec>e2</dec>
			<var-mul>s, 2</var-mul>
		</block>
	</while>
	<while>
		<cond>s gt SIGN_MAX * 2 + 1</cond>
		<block>
			<inc>e2</inc>
			<let>s, s / 2 + (s and 1)</let>
		</block>
	</while>
	<call name="printfln">
		"%d-%d-%p", sign, e2 + SIGN_DIGIT + EXP_MAX / 2, s and SIGN_MAX
	</call>
</function>

</llpml>
