<?xml version="1.0" encoding="utf-8" ?>
<llpml version="1.0">

<title>表記</title>

<include src="finish.xml" />

var a = 2;
const int b = 3;
const string fmt = "a = %d, b = %d";

<!-- simple -->
printfln(fmt, a, b);
<!-- complex -->
<call name="printfln">
  <string name="fmt" />
  <var name="a" />
  <int name="b" />
</call>

<!-- simple -->
printfln("add(a * b, 4) = %d", add(a * b, 4));
<!-- complex -->
<call name="printfln">
  <string>add(a * b, 4) = %d</string>
  <call name="add">
    <mul>
      <var name="a" />
      <int name="b" />
    </mul>
    <int>4</int>
  </call>
</call>

test t = { 9, 6 };

<!-- simple -->
printfln("sub(%d, %d) = %d", t.a, t.b, t.sub());
<!-- complex -->
<call name="printfln">
  <string>sub(%d, %d) = %d</string>
  <struct-member name="a">
    <ptr name="t" />
  </struct-member>
  <struct-member name="b">
    <ptr name="t" />
  </struct-member>
  <call>
    <struct-member name="sub">
      <ptr name="t" />
    </struct-member>    
  </call>
</call>

test2 t2 = { { 11, 3 } };

<!-- simple -->
printfln("sub(%d, %d) = %d", t2.t.a, t2.t.b, t2.t.sub());
<!-- complex -->
<call name="printfln">
  <string>sub(%d, %d) = %d</string>
  <struct-member name="t">
    <ptr name="t2" />
    <struct-member name="a" />
  </struct-member>
  <struct-member name="t">
    <ptr name="t2" />
    <struct-member name="b" />
  </struct-member>
  <call>
    <struct-member name="t">
      <ptr name="t2" />
      <struct-member name="sub" />
    </struct-member>
  </call>
</call>

<!-- -->

function add(a, b)
{
  return a + b;
}

struct test
{
  var a, b;

  function sub()
  {
    return a - b;
  }
}

struct test2 { test t; }

</llpml>
