<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.9.20071021">

<!-- method in struct in struct -->

<include src="finish.xml" />

<struct-define name="Point">
	<var-declare name="x" />
	<var-declare name="y" />
	
	<function name="Show">
		printfln("[%s] %d, %d", __FUNCTION__, x, y);
	</function>
</struct-define>

<struct-define name="DoublePoint">
	<struct-declare name="a" type="Point" />
	<struct-declare name="b" type="Point" />
	
	<function name="Show">
		printfln("[%s] %p -> a: %p", __FUNCTION__, this, a);
		a.Show();
		printfln("[%s] %p -> b: %p", __FUNCTION__, this, b);
		b.Show();
	</function>
</struct-define>

<struct-declare name="p" type="DoublePoint">
	<struct-declare>1, 2</struct-declare>
	<struct-declare>3, 4</struct-declare>
</struct-declare>

printfln("&amp;p = %p", p);
<call name="printfln">
	"&amp;p.a = %p"
	<struct-member-ptr ptr="p" name="a" />
</call>
<call name="printfln">
	"&amp;p.b = %p"
	<struct-member-ptr ptr="p" name="b" />
</call>
<call name="printfln">
	"&amp;p.b.y = %p"
	<struct-member-ptr ptr="p" name="b">
		<struct-member name="y" />
	</struct-member-ptr>
</call>

vprintfln("p = ((%d, %d), (%d, %d))", p);
p.Show();
p.a.Show();
p.b.Show();

</llpml>
