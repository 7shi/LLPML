<?xml version="1.0" encoding="utf-8" ?>
<llpml version="1.0">

<title>RTTI</title>

<include src="finish.xml" />

<?llp
class A
{
  function ctor()
  {
    printfln("%p: %s", this, typeof(this).Name);
  }

  function dtor()
  {
    printfln("%p: ~%s", this, typeof(this).Name);
  }
}
class B : A {}
class C : A {}

var a = new A;
printfln("typeof a: %s", typeof(a).Name);
printfln("a is A: %d, a as A: %p", a is A, a as A);
printfln("a is B: %d, a as B: %p", a is B, a as B);
printfln("a is C: %d, a as C: %p", a is C, a as C);
a = null;
println();

a = new B;
printfln("typeof a: %s", typeof(a).Name);
printfln("a is A: %d, a as A: %p", a is A, a as A);
printfln("a is B: %d, a as B: %p", a is B, a as B);
printfln("a is C: %d, a as C: %p", a is C, a as C);
a = null;
println();

function getC() { return (A)new C; }
a = getC();
printfln("typeof a: %s", typeof(a).Name);
printfln("a is A: %d, a as A: %p", a is A, a as A);
printfln("a is B: %d, a as B: %p", a is B, a as B);
printfln("a is C: %d, a as C: %p", a is C, a as C);
?>

</llpml>
