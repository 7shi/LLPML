<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.11.20080324" subsystem="WINDOWS_GUI">

<title>ウィンドウ</title>

<include src="stdio.xml" />
<include src="win32.xml" />

<?llp
const string className = "LLPML Test Window";
var hInstance = GetModuleHandle(null);

WNDCLASSEX wcex;
wcex.style         = CS_VREDRAW | CS_HREDRAW;
wcex.lpfnWndProc   = WndProc;
wcex.hInstance     = hInstance;
wcex.hCursor       = LoadCursor(null, IDC_ARROW);
wcex.hbrBackground = COLOR_WINDOW + 1;
wcex.lpszClassName = className;
wcex.RegisterClassEx();

var dwStyle = WS_OVERLAPPEDWINDOW;
RECT r = { 0, 0, 256, 256 };
r.AdjustWindowRectEx(dwStyle, false, 0);
var hWnd = CreateWindowEx(
  /* dwExStyle    */ 0,
  /* lpClassName  */ className,
  /* lpWindowName */ "テスト",
  /* dwStyle      */ dwStyle,
  /* X            */ CW_USEDEFAULT,
  /* Y            */ 0,
  /* nWidth       */ r.right - r.left,
  /* nHeight      */ r.bottom - r.top,
  /* hWndParent   */ null,
  /* hMenu        */ null,
  /* hInstance    */ hInstance,
  /* lpParam      */ null
);
hWnd.ShowWindow(SW_SHOWNORMAL);
hWnd.UpdateWindow();

MSG msg;
while (msg.GetMessage(null, 0, 0))
{
  msg.TranslateMessage();
  msg.DispatchMessage();
}

hWnd.DestroyWindow();

function __stdcall WndProc(hWnd, msg, wParam, lParam)
{
  switch (msg)
  {
    case WM_PAINT:
    {
      PAINTSTRUCT ps;
      var hdc = hWnd.BeginPaint(ps);
      hdc.TextOut(8, 8, className, className.lstrlen());
      hWnd.EndPaint(ps);
      break;
    }
    case WM_LBUTTONDOWN:
      MyFillRect();
      break;
    case WM_RBUTTONDOWN:
      hWnd.InvalidateRect(null, true);
      break;
    case WM_MOUSEMOVE:
      if (wParam & MK_LBUTTON) MyFillRect();
      break;
    case WM_DESTROY:
      PostQuitMessage(0);
      break;
    default:
      return hWnd.DefWindowProc(msg, wParam, lParam);
  }
  return 0;
  
  // 関数内関数
  function MyFillRect()
  {
    var hdc = hWnd.GetDC();
    var brush = GetSysColorBrush(COLOR_WINDOWTEXT);
    var x = lParam.GET_X_LPARAM();
    var y = lParam.GET_Y_LPARAM();
    RECT rect = { x - 2, y - 2, x + 2, y + 2 };
    hdc.FillRect(rect, brush);
  }
}
?>

</llpml>
