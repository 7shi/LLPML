<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.9.20080123">

<extern name="GetModuleHandle" alias="GetModuleHandleW" module="kernel32.dll" type="std" />
<extern name="Sleep" module="kernel32.dll" type="std" />
<extern name="DefWindowProc" alias="DefWindowProcW" module="user32.dll" type="std" />
<extern name="LoadCursor" alias="LoadCursorW" module="user32.dll" type="std" />
<extern name="RegisterClassEx" alias="RegisterClassExW" module="user32.dll" type="std" />
<extern name="CreateWindowEx" alias="CreateWindowExW" module="user32.dll" type="std" />
<extern name="ShowWindow" module="user32.dll" type="std" />
<extern name="UpdateWindow" module="user32.dll" type="std" />
<extern name="DestroyWindow" module="user32.dll" type="std" />
<extern name="GetMessage" alias="GetMessageW" module="user32.dll" type="std" />
<extern name="TranslateMessage" module="user32.dll" type="std" />
<extern name="DispatchMessage" alias="DispatchMessageW" module="user32.dll" type="std" />
<extern name="PostQuitMessage" module="user32.dll" type="std" />

const int CS_VREDRAW     = 1;
const int CS_HREDRAW     = 2;
const int COLOR_WINDOW   = 5;
const int IDC_ARROW      = 32512;
const int CW_USEDEFAULT  = 0x80000000;
const int WS_OVERLAPPED  = 0;
const int WS_CAPTION     = 0xc00000;
const int WS_SYSMENU     = 0x80000;
const int WS_THICKFRAME  = 0x40000;
const int WS_MINIMIZEBOX = 0x20000;
const int WS_MAXIMIZEBOX = 0x10000;
<var-declare name="WS_OVERLAPPEDWINDOW">
  <or>
    WS_OVERLAPPED,
    WS_CAPTION,
    WS_SYSMENU,
    WS_THICKFRAME,
    WS_MINIMIZEBOX,
    WS_MAXIMIZEBOX,
  </or>
</var-declare>
const int SW_SHOWNORMAL = 1;
const int WM_DESTROY = 2;

var hInstance = GetModuleHandle();

struct WNDCLASSEX
{
  var cbSize;
  var style;
  var lpfnWndProc;
  var cbClsExtra;
  var cbWndExtra;
  var hInstance;
  var hIcon;
  var hCursor;
  var hbrBackground;
  var lpszMenuName;
  var lpszClassName;
  var hIconSm;
}

struct POINT
{
  var x, y;
}

struct MSG
{
  var hwnd;
  var message;
  var wParam;
  var lParam;
  var time;
  var pt : POINT;
}

</llpml>
