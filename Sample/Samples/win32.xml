<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.9.20080127">

<extern module="kernel32.dll" type="std" name="GetModuleHandle" alias="GetModuleHandleW" />
<extern module="kernel32.dll" type="std" name="Sleep" />
<extern module="user32.dll" type="std" name="DefWindowProc" alias="DefWindowProcW" />
<extern module="user32.dll" type="std" name="LoadCursor" alias="LoadCursorW" />
<extern module="user32.dll" type="std" name="RegisterClassEx" alias="RegisterClassExW" />
<extern module="user32.dll" type="std" name="CreateWindowEx" alias="CreateWindowExW" />
<extern module="user32.dll" type="std" name="ShowWindow" />
<extern module="user32.dll" type="std" name="UpdateWindow" />
<extern module="user32.dll" type="std" name="DestroyWindow" />
<extern module="user32.dll" type="std" name="GetMessage" alias="GetMessageW" />
<extern module="user32.dll" type="std" name="TranslateMessage" />
<extern module="user32.dll" type="std" name="DispatchMessage" alias="DispatchMessageW" />
<extern module="user32.dll" type="std" name="PostQuitMessage" />

<?llpml
const int CS_VREDRAW     = 1;
const int CS_HREDRAW     = 2;
const int COLOR_WINDOW   = 5;
const int IDC_ARROW      = 32512;
const int CW_USEDEFAULT  = 0x80000000;
const int WS_OVERLAPPED  = 0;
const int WS_CAPTION     = 0xc00000;
const int WS_SYSMENU     = 0x80000;
const int WS_THICKFRAME  = 0x40000;
const int WS_MINIMIZEBOX = 0x20000;
const int WS_MAXIMIZEBOX = 0x10000;
var WS_OVERLAPPEDWINDOW =
  WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU |
  WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX;
const int SW_SHOWNORMAL = 1;
const int WM_DESTROY = 2;

struct WNDCLASSEX
{
  var cbSize;
  var style;
  var lpfnWndProc;
  var cbClsExtra;
  var cbWndExtra;
  var hInstance;
  var hIcon;
  var hCursor;
  var hbrBackground;
  var lpszMenuName;
  var lpszClassName;
  var hIconSm;
}

struct POINT
{
  var x, y;
}

struct MSG
{
  var hwnd;
  var message;
  var wParam;
  var lParam;
  var time;
  var pt : POINT;
}
?>

</llpml>
