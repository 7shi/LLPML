<?xml version="1.0" encoding="utf-8" ?>
<llpml version="0.20.20080514">

<!-- heap functions -->

<?llp
extern "kernel32.dll" __stdcall
{
  GetProcessHeap();
  HeapAlloc(hHeap, dwFlags, dwBytes);
  HeapReAlloc(hHeap, dwFlags, lpMem, dwBytes);
  HeapFree(hHeap, dwFlags, lpMem);
  HeapSize(hHeap, dwFlags, lpMem);
}

var g_hProcessHeap = GetProcessHeap();

function __operator_new(size)
{
  return malloc(size);
}

function __operator_delete(ptr)
{
  free(ptr);
}

function __get_heap_size(ptr)
{
  return HeapSize(g_hProcessHeap, 0, ptr);
}

// 実装

function malloc(size)
{
  return HeapAlloc(g_hProcessHeap, 0, size);
}

function realloc(ptr, size)
{
  return HeapReAlloc(g_hProcessHeap, 0, ptr, size);
}

function free(ptr)
{
  if (ptr != null)
    HeapFree(g_hProcessHeap, 0, ptr);
}
?>

</llpml>
